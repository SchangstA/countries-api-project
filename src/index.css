:root {
  --clr-neutral-800: hsl(208, 23%, 22%);  /* dark mode elements */
  --clr-neutral-700: hsl(209, 26%, 17%);  /* dark mode background */
  --clr-neutral-600: hsl(200, 15%, 8%);   /* light mode text */
  --clr-neutral-500: hsl(0, 0%, 52%);     /* light mode inputs */
  --clr-neutral-400: hsl(0, 0%, 98%);     /* light mode background */
  --clr-neutral-300: hsl(0, 0%, 100%);    /* dark mode text, light mode element */

  --ff-primary: 'Nunito Sans', sans-serif;

  --fw-regular:         300;
  --fw-bold:            600;
  --fw-extra-bold:      800;

  --fs-600:             2rem;
  --fs-500:             1.5rem;
  --fs-400:             1rem;
  --fs-300:             0.875rem;

  --fs-homepage-items:  var(--fs-300);
  --fs-body:            var(--fs-400);
  --fs-button:          var(--fs-300);

  --size-100:           0.25rem;
  --size-200:           0.5rem;
  --size-300:           0.75rem;
  --size-400:           1rem;
  --size-500:           1.5rem;
  --size-600:           2rem;
  --size-700:           3rem;
  --size-800:           4rem;
  --size-900:           5rem;

}

/* Box sizing rules */
*,
*::before,
*::after {
box-sizing: border-box;
}

/* Remove default margin */
* {
margin: 0;
padding: 0;
font-family: var(--ff-primary);
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
list-style: none;
}

/* Set core root defaults */
html:focus-within {
scroll-behavior: smooth;
}

html,
body {
  min-height: 100%;
  overflow-x: hidden;
}

/* Set core body defaults */
body {
text-rendering: optimizeSpeed;
line-height: 1.5;
background-color: var(--clr-neutral-700);
color: var(--clr-neutral-300);
}

/* A elements that don't have a class get default styles */
a:not([class]) {
text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
max-width: 100%;
display: block;
}


/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
html:focus-within {
 scroll-behavior: auto;
}

*,
*::before,
*::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
  scroll-behavior: auto !important;
}
}

/* button */

.button {
  display: inline-flex;
  cursor: pointer;
  text-decoration: none;
  border: 0;
  border-radius: 100vmax;
  padding: 1em 8em;
  margin-top: 1rem;
  font-weight: var(--fw-bold-pop);
  font-size: var(--fs-button);
  line-height: 1;
  color: var(--clr-neutral-300);
  background-color: var(--clr-neutral-600);
}

/* header */

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-block: 1.5rem;
  padding-inline: 3rem;
  background-color: var(--clr-neutral-800);
}

/* filter */

.filter {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-block: 2rem;
}

input, select {
  background-color: var(--clr-neutral-800);
  border: none;
  outline: none;
  padding: 12px;
  border-radius: 6px;
  color: var(--clr-neutral-300);
}

input {
  width: 30rem;
}

select {
  width: 15rem;
}

input::placeholder {
  color: var(--clr-neutral-300);
  text-align: left;
}

/* flags & information */

.details {
  max-width: 25rem;
  background-color: var(--clr-neutral-800);
  padding: 1.5rem;
  border-radius: 0 0 6px 6px;
}

h3 {
  padding-bottom: 12px;
}

h4 {
  padding-bottom: 6px;
}

span {
  font-weight: var(--fw-regular);
}

.flag-container {
  display: grid;
  grid-template-rows: repeat(2, 1fr);
}

.image-container {
  max-width: 25rem;
  width: 100%;
  max-height: 15rem;
  height: auto;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.images {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

article img {
  border-radius: 6px 6px 0 0;
}

/* --------Utility-Classes-------- */

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.container {
  --max-width: 100%;
  --container-padding: 3rem;
  width: min(var(--max-width), 100% - (var(--container-padding) * 2));
  margin-inline: auto;
}

.even-columns {
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
  padding-inline: 3rem;
}

@media (min-width: 47em) {
  .even-columns {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 72em) {
  .even-columns {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 86em) {
  .even-columns {
    grid-template-columns: repeat(4, 1fr);
  }
}

.vertical-align-center {
  align-items: center;
}

.justify-self-end {
  justify-self: end;
}

@media (min-width: 47em) {
  .justify-self-end-md {
    justify-self: end;
  }
}

:where(.flow :not(:first-child)) {
  margin-top: var(--flow-spacer, 4em);
}

.text-center {
  text-align: center;
}

.text-center p {
  margin-inline: auto;
}

@media (max-width: 47em) {
  .text-center-sm-only {
    text-align: center;
  }
}

@media (min-width: 47em) {
  .text-center-sm-only p {
    margin-inline: auto;
  }
}

.text-reaction-400 {color: var(--clr-primary-500);}
.text-memory-400 {color: var(--clr-primary-400);}
.text-verbal-400 {color: var(--clr-primary-300);}
.text-visual-400 {color: var(--clr-primary-600);}
.text-neutral-300 {color: var(--clr-neutral-300);}
.text-neutral-400 {color: var(--clr-neutral-400);}

.fw-regular {font-weight: var(--fw-regular);}
.fw-bold {font-weight: var(--fw-bold);}
.fw-extra-bold {font-weight: var(--fw-extra-bold);}

.fs-300 { font-size: var(--fs-300);}
.fs-400 { font-size: var(--fs-400);}
.fs-500 { font-size: var(--fs-500);}
.fs-600 { font-size: var(--fs-600);}

.mx-auto {margin-inline: auto;}